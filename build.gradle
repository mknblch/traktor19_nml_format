apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8
version = '0.1'

repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {

    compile 'de.mknblch.params:params:1.2.0'
    compile 'de.mknblch.objectdump:objectDump:1.0'
    compile 'commons-jxpath:commons-jxpath:1.3'

    testCompile group: 'junit', name: 'junit', version: '4.11'

}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'NML',
                'Implementation-Version': version,
                'Main-Class': 'de.mknblch.nml.Launcher'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

fatJar {}.dependsOn 'build'

///////////////////////


configurations {
    jaxb
}

dependencies {
    jaxb group: 'com.sun.xml.bind', name: 'jaxb-xjc', version: '2.2.4-1'
}

task jaxb () {
    // output directory

    // perform actions
    doLast {

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)
//        ant.jaxbTargetDir = file("${buildDir}/generated-sources")
        ant.jaxbTargetDir = file("src/main/java")

        // My-Webservice v1.10
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'de.mknblch.nml.entities',
                schema: 'src/main/resources/collection.xsd',
                binding: 'src/main/resources/binding.xml'
        )
    }
}
compileJava.dependsOn jaxb


///////////////////////////////

task expToWin(type: Copy) {
    from 'build/libs/'
    into 'C:/Users/mk/bin/jars'
    include '*.jar'
//    rename (project.name + "-" + version + ".jar", project.name + ".jar")
}

expToWin {}.dependsOn fatJar


